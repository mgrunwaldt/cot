<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $name
 * @property string $surname
 * @property string $email
 * @property string $dni
 * @property string $phone
 * @property integer $address_id
 * @property integer $team_id
 * @property boolean $is_info_complete
 * @property boolean $is_active
 * @property boolean $has_created_team
 * @property boolean $is_male
 * @property string $date_of_birth
 * @property integer $user_template_id
 * @property integer $coach_template_id
 * @property boolean $is_blocked
 *
 * @property ConfirmationLinks $confirmationLinks
 * @property LigasDeAmigos[] $ligasDeAmigoses
 * @property Messages[] $messages
 * @property Sessions[] $sessions
 * @property Superequipos[] $superequiposes
 * @property Supergrupos[] $supergruposes
 * @property Addresses $address
 * @property UserTemplates $userTemplate
 */
abstract class BaseUsers extends GxActiveRecord {

	/**
     * short method description
     * 
     * extended method description
     * 
     * @param BaseUsers $className param description
     */
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function representingColumn() {
		return 'username';
	}

	public function rules() {
		return array(
			array('username, password, name, surname, email, dni, phone, team_id, is_info_complete, is_active, has_created_team, is_male, date_of_birth, is_blocked', 'required'),
			array('address_id, team_id, user_template_id, coach_template_id', 'numerical', 'integerOnly'=>true),
			array('is_info_complete, is_active, has_created_team, is_male, is_blocked', 'boolean'),
			array('email', 'email'),
			array('username, name, surname, phone', 'length', 'max'=>20),
			array('password, email', 'length', 'max'=>50),
			array('dni', 'length', 'max'=>11),
			array('address_id, user_template_id, coach_template_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, username, password, name, surname, email, dni, phone, address_id, team_id, is_info_complete, is_active, has_created_team, is_male, date_of_birth, user_template_id, coach_template_id, is_blocked', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'confirmationLinks' => array(self::HAS_ONE, 'ConfirmationLinks', 'user_id'),
			'ligasDeAmigoses' => array(self::HAS_MANY, 'LigasDeAmigos', 'user_id'),
			'messages' => array(self::MANY_MANY, 'Messages', 'message_receivers(user_id, message_id)'),
			'sessions' => array(self::HAS_MANY, 'Sessions', 'user_id'),
			'superequiposes' => array(self::HAS_MANY, 'Superequipos', 'user_id'),
			'supergruposes' => array(self::HAS_MANY, 'Supergrupos', 'user_id'),
			'address' => array(self::BELONGS_TO, 'Addresses', 'address_id'),
			'userTemplate' => array(self::BELONGS_TO, 'UserTemplates', 'user_template_id'),
		);
	}

	public function pivotModels() {
		return array(
			'messages' => 'MessageReceivers',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'name' => Yii::t('app', 'Name'),
			'surname' => Yii::t('app', 'Surname'),
			'email' => Yii::t('app', 'Email'),
			'dni' => Yii::t('app', 'Dni'),
			'phone' => Yii::t('app', 'Phone'),
			'address_id' => Yii::t('app', 'Address'),
			'team_id' => Yii::t('app', 'Team'),
			'is_info_complete' => Yii::t('app', 'Is Info Complete'),
			'is_active' => Yii::t('app', 'Is Active'),
			'has_created_team' => Yii::t('app', 'Has Created Team'),
			'is_male' => Yii::t('app', 'Is Male'),
			'date_of_birth' => Yii::t('app', 'Date Of Birth'),
			'user_template_id' => Yii::t('app', 'User Template'),
			'coach_template_id' => Yii::t('app', 'Coach Template'),
			'is_blocked' => Yii::t('app', 'Is Blocked'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('dni', $this->dni, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('address_id', $this->address_id);
		$criteria->compare('team_id', $this->team_id);
		$criteria->compare('is_info_complete', $this->is_info_complete);
		$criteria->compare('is_active', $this->is_active);
		$criteria->compare('has_created_team', $this->has_created_team);
		$criteria->compare('is_male', $this->is_male);
		$criteria->compare('date_of_birth', $this->date_of_birth, true);
		$criteria->compare('user_template_id', $this->user_template_id);
		$criteria->compare('coach_template_id', $this->coach_template_id);
		$criteria->compare('is_blocked', $this->is_blocked);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}