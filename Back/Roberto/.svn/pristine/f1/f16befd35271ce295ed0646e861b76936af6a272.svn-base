<?php
    
    class LanguagesController extends Controller{
	/**
	 * @var string the default layout for the views. Defaults to '//layouts/column2', meaning
	 * using two-column layout. See 'protected/views/layouts/column2.php'.
	 */
	public $layout='//layouts/column2';

	/**
	 * @return array action filters
	 */
	public function filters(){
		return array(
			'accessControl', // perform access control for CRUD operations
		);
	}

	/**
	 * Specifies the access control rules.
	 * This method is used by the 'accessControl' filter.
	 * @return array access control rules
	 */
	public function accessRules(){
		return array(
			
                        array('allow',  // allow all users to perform 'index' and 'view' actions
				'actions'=>array('changeLanguage'),
				'users'=>array('*'),
			),
			array('allow', // allow authenticated user to perform 'create' and 'update' actions
				'actions'=>array('getArray','getAllArray','viewMain','viewAdd','viewEdit','add','save','delete'),
				'users'=>array('@'),
				'expression'=>'isset(Yii::app()->user->role) && (Yii::app()->user->role===\'admin\')',
			),
			array('allow', // allow admin user to perform 'admin' and 'delete' actions
				'actions'=>array(),
				'users'=>array('admin'),
			),
			array('deny',  // deny all users
				'users'=>array('*'),
			),
		);
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionViewMain(){
		try
		{
                    
            $this->render('main',array());
		}
		catch (Exception $ex)
		{
			Errors::log('Error en LanguagesController/actionViewMain',$ex->getMessage(),'');
			$this->redirect('/site/userError');
		}
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionViewAdd()
	{
		try
		{          
            $webTexts=  WebTexts::getAllArray();
            $isNewRecord=true;
            $this->render('add',array('webTexts'=>$webTexts,'isNewRecord'=>$isNewRecord));
		}
		catch (Exception $ex)
		{
			Errors::log('Error en LanguagesController/actionViewAdd',$ex->getMessage(),'');
			$this->redirect('/site/userError');
		}
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionViewEdit($id=0)
	{
		try
		{
            $languages = Languages::getAll();
            $webTexts=  WebTexts::getAllArray();
            $languageWebTexts = LanguageWebTexts::getAllArray();
            $isNewRecord=false;
            $this->render('edit',array('id'=>$id, 'languages'=>$languages, 'webTexts'=>$webTexts,'languageWebTexts'=>$languageWebTexts,'isNewRecord'=>$isNewRecord));
		}
		catch (Exception $ex)
		{
			Errors::log('Error en LanguagesController/actionViewEdit',$ex->getMessage(),'');
			$this->redirect('/site/userError');
		}
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionAdd()
	{
        $response = array();
		
        try
		{
                if(isset($_POST['languag']) && is_array($_POST['languag'])){
                    $languagArray = $_POST['languag'];
                    if(isset($languagArray['name']) && isset($languagArray['is_default']) && isset($languagArray['active']) && isset($languagArray['webTexts'])){
                        if(Languages::checkUnique($languagArray['name'])){

                            $id=-1;
                            if($languagArray['is_default']==0 || ($languagArray['is_default']==1 && !Languages::defaultLanguageAssigned($id))){

                                $languag = Languages::create($languagArray['name'],$languagArray['is_default'],$languagArray['active'],$languagArray['webTexts']);
                                if(!$languag->hasErrors()){

                                    $response['status'] = 'ok';
                                    $response['message'] = 'Languag Added';
                                    $response['id'] = $languag->id;

                                    Logs::log('Se creó el Languag '.$languag->id);
                                }
                                else{
                                    $response['status'] = 'error';
                                    $response['error'] = 'errorSavingLanguag';
                                    $response['errorMessage'] = HelperFunctions::getErrorsFromModel($languag);
                                }
                              }
                              else{
                                   $response['status'] = 'error';
                                   $response['error'] = 'defaultLanguageAssigned';
                                   $response['errorMessage'] = 'Ya hay un lenguaje por defecto seleccionado.';
                              }
                        }
                        else{
                            $response['status'] = 'error';
                            $response['error'] = 'languagAlreadyExists';
                            $response['errorMessage'] = 'languagAlreadyExists';
                        }
                    }
                    else{
                        $response['status'] = 'error';
                        $response['error'] = 'invalidData';
                        $response['errorMessage'] = 'invalidData';
                    }
                }
                else{
                    $response['status'] = 'error';
                    $response['error'] = 'noData';
                    $response['errorMessage'] = 'noData';
                }
                echo json_encode($response);
		}
		catch (Exception $ex)
		{
                    Errors::log('Error en LanguagController/actionAdd',$ex->getMessage(),'');
                    $response['status'] = 'error';
                    $response['error'] = 'unknown';
                    $response['errorMessage'] = 'unknown';
                    echo json_encode($response);
		}
	}
        
	public function actionSave()
	{
        $response = array();
                
        try{
                    if(isset($_POST['languag']) && is_array($_POST['languag'])){
                        $languagArray = $_POST['languag'];
                        if(isset($languagArray['id']) && is_numeric($languagArray['id']) && isset($languagArray['name']) && isset($languagArray['is_default']) && isset($languagArray['active']) && isset($languagArray['webTexts'])){

                            $languag = Languages::get($languagArray['id']);
                            if(isset($languag->id)){
                                if(Languages::checkUnique($languagArray['name'], $languagArray['id'])){

                                    if($languagArray['is_default']==0 || ($languagArray['is_default']==1 && !Languages::defaultLanguageAssigned($languagArray['id']))){

                                            $languag->updateAttributes($languagArray['name'],$languagArray['is_default'],$languagArray['active'],$languagArray['webTexts']);
                                            if(!$languag->hasErrors()){

                                                $response['status'] = 'ok';
                                                $response['message'] = 'Languag Saved';

                                                Logs::log('Se editó el Languag '.$languag->id);
                                            }
                                            else{
                                                $response['status'] = 'error';
                                                $response['error'] = 'ErrorSavingLanguag';
                                                $response['errorMessage'] = HelperFunctions::getErrorsFromModel($languag);
                                            }
                                        }
                                        else{
                                            $response['status'] = 'error';
                                            $response['error'] = 'defaultLanguageAssigned';
                                            $response['errorMessage'] = 'Ya hay un lenguaje por defecto seleccionado.';
                                        }

                                }
                                else{
                                     $response['status'] = 'error';
                                          $response['error'] = 'languagAlreadyExists';
                                          $response['errorMessage'] = 'languagAlreadyExists';
                                }
                            }
                            else{
                                $response['status'] = 'error';
                                $response['error'] = 'NoLanguagWithId';
                                $response['errorMessage'] = 'NoLanguagWithId';
                            }
                        }
                        else{
                            $response['status'] = 'error';
                            $response['error'] = 'invalidData';
                            $response['errorMessage'] = 'invalidData';
                        }
                    }
                    else{
                        $response['status'] = 'error';
                        $response['error'] = 'noData';
                        $response['errorMessage'] = 'noData';
                    }
                    echo json_encode($response);
        }
        catch (Exception $ex)
        {
                    Errors::log('Error en LanguagesController/actionSave',$ex->getMessage(),'');
                    $response['status'] = 'error';
                    $response['error'] = 'unknown';
                    $response['errorMessage'] = 'unknown';
                    echo json_encode($response);
        }
    }



    public function actionGetArray(){
        try{
            if(isset($_POST['id']) && is_numeric($_POST['id'])){
                $languag = Languages::get($_POST['id']);
                if(isset($languag->id)){
                    $languagArray = HelperFunctions::modelToArray($languag);

                    $response['status'] = 'ok';
                    $response['languag'] = $languagArray;
                }
                else{
                    $response['status'] = 'error';
                    $response['error'] = 'NoLanguagWithId';
                    $response['errorMessage'] = 'NoLanguagWithId';
                }
            }
            else{
                $response['status'] = 'error';
                $response['error'] = 'invalidData';
                $response['errorMessage'] = 'invalidData';
            }
            echo json_encode($response);
        }
        catch (Exception $ex){
            Errors::log('Error en LanguagesController/actionGetArray',$ex->getMessage(),'');
            $response['status'] = 'error';
            $response['error'] = 'unknown';
            $response['errorMessage'] = 'unknown';
            echo json_encode($response);
        }
    }

    public function actionGetAllArray(){
        try{
            $languagesArray = array();
            $languages = Languages::getAll();
            foreach($languages as $languag)
                $languagesArray[] = HelperFunctions::modelToArray($languag);

            $response['languages'] = $languagesArray;
            $response['status'] = 'ok';

            echo json_encode($response);
        }
        catch (Exception $ex){
            Errors::log('Error en LanguagesController/actionGetAllArray',$ex->getMessage(),'');
            $response['status'] = 'error';
            $response['error'] = 'unknown';
            $response['errorMessage'] = 'unknown';
            echo json_encode($response);
        }
    }
        
	public function actionDelete()
	{
        
        
        $response = array();
		try{
                    if(isset($_POST['id']) && is_numeric($_POST['id'])){
                        $languag = Languages::get($_POST['id']);
                        if(isset($languag->id)){
                            $languag->deleteLanguag();
                            $response['status'] = 'ok';
                            $response['message'] = 'Languag Deleted';
                                    
                            Logs::log('Se eliminó el Languag '.$_POST['id']);
                        }
                        else{
                            $response['status'] = 'error';
                            $response['error'] = 'noLanguagWithId';
                            $response['errorMessage'] = 'noLanguagWithId';
                        }
                    }
                    else{
                        $response['status'] = 'error';
                        $response['error'] = 'noData';
                        $response['errorMessage'] = 'noData';
                    }
                    echo json_encode($response);
		}
		catch (Exception $ex)
		{
                    Errors::log('Error en LanguagesController/actionDelete',$ex->getMessage(),'');
                    $response['status'] = 'error';
                    $response['error'] = 'unknown';
                    $response['errorMessage'] = 'unknown';
                    echo json_encode($response);
		}
	}
    
    
    
    public function actionChangeLanguage($id=0){
        
        if($id!=0)
            Yii::app()->session['session_lang_id']= $id;  
        
        $this->redirect($_SERVER['HTTP_REFERER']);
    }
        
}
?>